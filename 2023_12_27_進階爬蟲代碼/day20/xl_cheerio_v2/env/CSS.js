// CSS对象
var CSS = {}
bodavm.toolsFunc.defineProperty(CSS, "Hz", {configurable:true, enumerable:true, writable:true, value:function Hz (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "Hz", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "Q", {configurable:true, enumerable:true, writable:true, value:function Q (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "Q", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "ch", {configurable:true, enumerable:true, writable:true, value:function ch (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "ch", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "cm", {configurable:true, enumerable:true, writable:true, value:function cm (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "cm", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "deg", {configurable:true, enumerable:true, writable:true, value:function deg (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "deg", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "dpcm", {configurable:true, enumerable:true, writable:true, value:function dpcm (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "dpcm", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "dpi", {configurable:true, enumerable:true, writable:true, value:function dpi (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "dpi", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "dppx", {configurable:true, enumerable:true, writable:true, value:function dppx (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "dppx", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "em", {configurable:true, enumerable:true, writable:true, value:function em (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "em", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "escape", {configurable:true, enumerable:true, writable:true, value:function escape (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "escape", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "ex", {configurable:true, enumerable:true, writable:true, value:function ex (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "ex", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "fr", {configurable:true, enumerable:true, writable:true, value:function fr (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "fr", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "grad", {configurable:true, enumerable:true, writable:true, value:function grad (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "grad", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "in", {configurable:true, enumerable:true, writable:true, value:function  (){ return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "in", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "kHz", {configurable:true, enumerable:true, writable:true, value:function kHz (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "kHz", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "mm", {configurable:true, enumerable:true, writable:true, value:function mm (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "mm", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "ms", {configurable:true, enumerable:true, writable:true, value:function ms (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "ms", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "number", {configurable:true, enumerable:true, writable:true, value:function number (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "number", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "pc", {configurable:true, enumerable:true, writable:true, value:function pc (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "pc", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "percent", {configurable:true, enumerable:true, writable:true, value:function percent (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "percent", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "pt", {configurable:true, enumerable:true, writable:true, value:function pt (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "pt", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "px", {configurable:true, enumerable:true, writable:true, value:function px (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "px", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "rad", {configurable:true, enumerable:true, writable:true, value:function rad (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "rad", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "registerProperty", {configurable:true, enumerable:true, writable:true, value:function registerProperty (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "registerProperty", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "rem", {configurable:true, enumerable:true, writable:true, value:function rem (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "rem", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "s", {configurable:true, enumerable:true, writable:true, value:function s (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "s", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "supports", {configurable:true, enumerable:true, writable:true, value:function supports (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "supports", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "turn", {configurable:true, enumerable:true, writable:true, value:function turn (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "turn", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "vh", {configurable:true, enumerable:true, writable:true, value:function vh (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "vh", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "vmax", {configurable:true, enumerable:true, writable:true, value:function vmax (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "vmax", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "vmin", {configurable:true, enumerable:true, writable:true, value:function vmin (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "vmin", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "vw", {configurable:true, enumerable:true, writable:true, value:function vw (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "vw", arguments)}});
bodavm.toolsFunc.defineProperty(CSS, "paintWorklet", {configurable:true, enumerable:true, get:function paintWorklet (){return bodavm.toolsFunc.dispatch(this, CSS, "CSS", "paintWorklet_get", arguments)}, set:undefined});
